{"ast":null,"code":"import { vModelDynamic as _vModelDynamic, mergeProps as _mergeProps, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-floating mb-3\"\n};\nconst _hoisted_2 = [\"type\", \"id\", \"name\", \"placeholder\", \"isRequired\"];\nconst _hoisted_3 = [\"for\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", _mergeProps({\n    class: 'form-control',\n    type: $props.type,\n    id: $props.id,\n    name: $props.name,\n    placeholder: $props.placeholder,\n    isRequired: $props.isRequired,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.modelValue = $event),\n    onInput: _cache[1] || (_cache[1] = $event => _ctx.$emit('update:modelValue', $event.target.value))\n  }, _ctx.$attrs), null, 16 /* FULL_PROPS */, _hoisted_2), [[_vModelDynamic, $data.modelValue]]), _createElementVNode(\"label\", {\n    for: $props.id\n  }, _toDisplayString($props.label), 9 /* TEXT, PROPS */, _hoisted_3)]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;AAAoB;;;;uBAA/BC,oBAaM,OAbNC,UAaM,mBAZFC,oBAUE,SAVFC,YAUE;IATKJ,KAAK,EAAE,cAAc;IAC3BK,IAAI,EAAEC,WAAI;IACVC,EAAE,EAAED,SAAE;IACNE,IAAI,EAAEF,WAAI;IACVG,WAAW,EAAEH,kBAAW;IACxBI,UAAU,EAAEJ,iBAAU;+DACdK,gBAAU;IAClBC,OAAK,sCAAEC,UAAK,sBAAqBC,MAAM,CAACC,MAAM,CAACC,KAAK;KAC7CH,WAAM,6DAFLF,gBAAU,KAInBR,oBAAoC;IAA5Bc,GAAG,EAAEX;EAAE,oBAAKA,YAAK","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_mergeProps","type","$props","id","name","placeholder","isRequired","$data","onInput","_ctx","$event","target","value","for"],"sourceRoot":"","sources":["/opt/rdx-vitrina-front/src/components/RDxInput.vue"],"sourcesContent":["<template>\n    <div class=\"form-floating mb-3\">\n        <input \n        v-bind:class=\"'form-control'\"\n        :type=\"type\"\n        :id=\"id\"\n        :name=\"name\"\n        :placeholder=\"placeholder\"\n        :isRequired=\"isRequired\"\n        v-model=\"modelValue\"\n        @input=\"$emit('update:modelValue',$event.target.value)\"\n        v-bind=\"$attrs\"\n        />\n        <label :for=\"id\">{{ label }}</label>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: \"rdx-input\",\n    props: {\n        id: \n        {\n            type: String,\n            required: true\n        },\n        name: String,\n        label: String,\n        placeholder: String,\n        type: String,\n        isRequired: \n        {\n            type: Boolean,\n            default: false\n        },\n    },\n    data() {\n        return {\n            modelValue: null,\n        };\n    },\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}