{"ast":null,"code":"import { mergeProps as _mergeProps, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-bc7458f8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"dropzone-card image\"\n};\nconst _hoisted_2 = {\n  class: \"dropzone dz-started\",\n  \"data-controller\": \"dropzone\",\n  \"data-dropzone-max-file-size\": \"255\",\n  \"data-dropzone-max-files\": \"1\",\n  \"data-dropzone-target\": \"root\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"dropzone-empty center\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createStaticVNode(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 40 40\\\" preserveAspectRatio=\\\"none\\\" class=\\\"w-100 h-100\\\" data-v-bc7458f8><path class=\\\"line-svg\\\" d=\\\"M 20,20 L 39,39\\\" data-v-bc7458f8></path><path class=\\\"line-svg\\\" d=\\\"M 20,20 L 1,39\\\" data-v-bc7458f8></path><path class=\\\"line-svg\\\" d=\\\"M 20,20 L 39,1\\\" data-v-bc7458f8></path><path class=\\\"line-svg\\\" d=\\\"M 20,20 L 1,1\\\" data-v-bc7458f8></path></svg>\", 1);\nconst _hoisted_5 = {\n  key: 1,\n  class: \"dropzone-drag\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"dropzone-drag-content\"\n}, \"Suelta tu imagen..\", -1 /* HOISTED */));\nconst _hoisted_7 = [_hoisted_6];\nconst _hoisted_8 = {\n  key: 2,\n  class: \"dropzone-uploading\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"dropzone-uploading-content\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"spinner-border\",\n  role: \"status\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"visually-hidden\"\n}, \"Loading...\")])], -1 /* HOISTED */));\nconst _hoisted_10 = [_hoisted_9];\nconst _hoisted_11 = {\n  key: 3,\n  class: \"dz-preview dz-processing dz-success dz-complete\",\n  \"data-dropzone-target\": \"preview\"\n};\nconst _hoisted_12 = [\"id\"];\nconst _hoisted_13 = [\"id\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _mergeProps({\n    class: \"dropzone-cover dropzone-type-roundrect\"\n  }, $setup.getRootProps()), [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"input\", _mergeProps($setup.getInputProps(), {\n    class: \"d-none\",\n    required: \"\",\n    accept: \"image/png,image/jpeg\",\n    direct_upload: \"true\",\n    \"data-dropzone-target\": \"input\"\n  }), null, 16 /* FULL_PROPS */), _createCommentVNode(\" SIN IMAGEN CARGADA \"), $setup.isEmpty ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createCommentVNode(\" cross \"), _hoisted_4])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" ESTOY EJECUTANDO DRAG \"), $setup.isDragActive ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _hoisted_7)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" SE ESTA HACIENDO EL UPLOAD O DOWNLOAD  \"), $setup.isUploading || _ctx.isDownloading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _hoisted_10)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" TENGO UNA IMAGEN CARGADA \"), !$setup.isEmpty ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createElementVNode(\"div\", {\n    class: \"dz-image\",\n    id: $setup.id_div_canvas\n  }, [_createElementVNode(\"canvas\", {\n    style: {\n      \"background\": \"#fff\",\n      \"display\": \"block\"\n    },\n    id: $setup.id_canvas\n  }, null, 8 /* PROPS */, _hoisted_13), _createCommentVNode(\" <%= image_tag cover_rect(image),  size: '600x600','data-dz-thumbnail': '' %> \")], 8 /* PROPS */, _hoisted_12), _createCommentVNode(\"\\n                    <div class=\\\"dz-details h-100 w-100\\\">\\n                         <%= link_to image, download: image.blob.filename.to_s , target: :_blank, class: 'dz-download w-100 h-100' do %>\\n          <%=content_tag :span, t('.download')%>\\n        <%end%> \\n                    </div>\\n                    \"), _createCommentVNode(\" \\n                    <a  \\n                        v-if=\\\"!isUploading\\\"\\n                        class=\\\"dz-remove\\\"\\n                        href=\\\"javascript:undefined;\\\"\\n                    >\\n                    </a>\\n                    \")])) : _createCommentVNode(\"v-if\", true)])])], 16 /* FULL_PROPS */);\n}","map":{"version":3,"mappings":";;;EAEaA,KAAK,EAAC;AAAqB;;EAExBA,KAAK,EAAC,qBAAqB;EAC3B,iBAAe,EAAC,UAAU;EAC1B,6BAA2B,EAAC,KAAK;EACjC,yBAAuB,EAAC,GAAG;EAC3B,sBAAoB,EAAC;;;;EAYDA,KAAK,EAAC;;;;;EAgBDA,KAAK,EAAC;;gEAC3BC,oBAA2D;EAAtDD,KAAK,EAAC;AAAuB,GAAC,oBAAkB;oBAArDE,UAA2D;;;EAM3DF,KAAK,EAAC;;gEAENC,oBAIM;EAJDD,KAAK,EAAC;AAA4B,iBACnCC,oBAEM;EAFDD,KAAK,EAAC,gBAAgB;EAACG,IAAI,EAAC;iBAC7BF,oBAA+C;EAAzCD,KAAK,EAAC;AAAiB,GAAC,YAAU;qBAFhDI,UAIM;;;EAMNJ,KAAK,EAAC,iDAAiD;EACvD,sBAAoB,EAAC;;;;;uBAvDrCK,oBAoFM,OApFNC,YAoFM;IApFDN,KAAK,EAAC;EAAwC,GAASO,mBAAY,MACpEN,oBAkFM,OAlFNO,UAkFM,GAjFFP,oBAgFM,OAhFNQ,UAgFM,GAzEFR,oBAOE,SAPFK,YACYC,MAMV,cANuB;IACrBP,KAAK,EAAC,QAAQ;IACdU,QAAQ,EAAR,EAAQ;IACRC,MAAM,EAAC,sBAAsB;IAC7BC,aAAa,EAAC,MAAM;IACpB,sBAAoB,EAAC;kCAGzBC,2CAA2B,EAChBN,cAAO,kBAAlBF,oBAaM,OAbNS,UAaM,GAZFD,8BAAc,EACdE,UAUM,yCAGVF,8CAA8B,EACnBN,mBAAY,kBAAvBF,oBAEM,OAFNW,UAEM,oDAENH,+DAA+C,EAErCN,kBAAW,IAAIU,kBAAa,kBADtCZ,oBASM,OATNa,UASM,qDAENL,iDAAiC,GAEtBN,cAAO,kBADlBF,oBA6BM,OA7BNc,WA6BM,GAxBFlB,oBAOM;IAPDD,KAAK,EAAC,UAAU;IAAEoB,EAAE,EAAEb;MACvBN,oBAGE;IAFEoB,KAAwC,EAAxC;MAAA;MAAA;IAAA,CAAwC;IACvCD,EAAE,EAAEb;wCAGTM,qGAAqF,gCAGzFA,mVAMG,EACHA,6QAOG","names":["class","_createElementVNode","_hoisted_6","role","_hoisted_9","_createElementBlock","_mergeProps","$setup","_hoisted_1","_hoisted_2","required","accept","direct_upload","_createCommentVNode","_hoisted_3","_hoisted_4","_hoisted_5","_ctx","_hoisted_8","_hoisted_11","id","style"],"sourceRoot":"","sources":["/opt/rdx-vitrina-front/src/views/dashboard/vitrina/form/inputs/VitrinaImage.vue"],"sourcesContent":["<template>\n    <div class=\"dropzone-cover dropzone-type-roundrect\" v-bind=\"getRootProps()\">\n        <div class=\"dropzone-card image\">\n            <div\n                class=\"dropzone dz-started\"\n                data-controller=\"dropzone\"\n                data-dropzone-max-file-size=\"255\"\n                data-dropzone-max-files=\"1\"\n                data-dropzone-target=\"root\"\n            >\n                <input\n                    v-bind=\"getInputProps()\"\n                    class=\"d-none\"\n                    required\n                    accept=\"image/png,image/jpeg\"\n                    direct_upload=\"true\"\n                    data-dropzone-target=\"input\"\n                />\n\n                <!-- SIN IMAGEN CARGADA -->\n                <div v-if=\"isEmpty\" class=\"dropzone-empty center\">\n                    <!-- cross -->\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 40 40\"\n                        preserveAspectRatio=\"none\"\n                        class=\"w-100 h-100\"\n                    >\n                        <path class=\"line-svg\" d=\"M 20,20 L 39,39\"></path>\n                        <path class=\"line-svg\" d=\"M 20,20 L 1,39\"></path>\n                        <path class=\"line-svg\" d=\"M 20,20 L 39,1\"></path>\n                        <path class=\"line-svg\" d=\"M 20,20 L 1,1\"></path>\n                    </svg>\n                </div>\n\n                <!-- ESTOY EJECUTANDO DRAG -->\n                <div v-if=\"isDragActive\" class=\"dropzone-drag\">\n                    <div class=\"dropzone-drag-content\">Suelta tu imagen..</div>\n                </div>\n\n                <!-- SE ESTA HACIENDO EL UPLOAD O DOWNLOAD  -->\n                <div\n                    v-if=\"isUploading || isDownloading\"\n                    class=\"dropzone-uploading\"\n                >\n                    <div class=\"dropzone-uploading-content\">\n                        <div class=\"spinner-border\" role=\"status\">\n                            <span class=\"visually-hidden\">Loading...</span>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- TENGO UNA IMAGEN CARGADA -->\n                <div\n                    v-if=\"!isEmpty\"\n                    class=\"dz-preview dz-processing dz-success dz-complete\"\n                    data-dropzone-target=\"preview\"\n                >\n                    <div class=\"dz-image\" :id=\"id_div_canvas\">\n                        <canvas\n                            style=\"background: #fff; display: block\"\n                            :id=\"id_canvas\"\n                        />\n\n                        <!-- <%= image_tag cover_rect(image),  size: '600x600','data-dz-thumbnail': '' %> -->\n                    </div>\n\n                    <!--\n                    <div class=\"dz-details h-100 w-100\">\n                         <%= link_to image, download: image.blob.filename.to_s , target: :_blank, class: 'dz-download w-100 h-100' do %>\n          <%=content_tag :span, t('.download')%>\n        <%end%> \n                    </div>\n                    -->\n                    <!-- \n                    <a  \n                        v-if=\"!isUploading\"\n                        class=\"dz-remove\"\n                        href=\"javascript:undefined;\"\n                    >\n                    </a>\n                    -->\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.line-svg {\n    fill: none;\n    stroke: #c6c6c6;\n    stroke-width: 1px;\n    vector-effect: non-scaling-stroke;\n    shape-rendering: geometricPrecision;\n}\n.dropzone-card {\n    width: 100%;\n    height: 100%;\n    background: transparent\n        linear-gradient(rgba(255, 255, 255, 0.67), rgba(255, 255, 255, 0.2)) 0%\n        0% no-repeat padding-box;\n    box-shadow: 3px 7px 8px rgba(0, 0, 0, 0.168627451);\n    border-radius: 11px;\n    overflow: hidden;\n\n    .dropzone {\n        background-color: #f5f5f5 !important;\n        // aspect-ratio: 400/400;\n        width: 100%;\n        min-height: auto;\n        border: none;\n        position: relative;\n        opacity: 1;\n\n        .dropzone-empty {\n            background-color: white;\n            width: 100%;\n            height: 100%;\n            border: 1px dashed #6f6f6f;\n            border-radius: 11px;\n            margin: 0;\n            display: block !important;\n        }\n\n        .dropzone-uploading {\n            background-color: rgba(0, 0, 0, 0.2);\n            width: 100%;\n            height: 100%;\n            position: absolute;\n            top: 0px;\n            left: 0px;\n            .dropzone-uploading-content {\n                position: absolute;\n                z-index: 1031;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        }\n\n        .dropzone-drag {\n            background-color: rgba(0, 0, 0, 0.2);\n            width: 100%;\n            height: 100%;\n            position: absolute;\n            top: 0px;\n            left: 0px;\n            .dropzone-drag-content {\n                background: #ff0;\n                position: absolute;\n                z-index: 1031;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        }\n    }\n}\n</style>\n\n<script>\nimport { useDropzone } from \"vue3-dropzone\";\nimport { getCurrentInstance, ref, watch, onMounted } from \"vue\";\nimport axios from \"axios\";\n\nexport default {\n    props: {\n        url: { default: null },\n        uuid: { default: null },\n        type_ch: { default: null },\n        product_id: { default: null },\n    },\n    emits: [\"update:uuid\"],\n    setup(props, context) {\n        const instance = getCurrentInstance();\n        const { $api, $store, $u } =\n            instance.appContext.config.globalProperties;\n\n        const state = ref(\"EMPTY\");\n\n        const isUploading = ref(false);\n        const isDownloading = ref(false);\n        const isEmpty = ref(true);\n\n        //const local_uuid = ref(props.uuid);\n        const url_img = ref(props.url);\n\n        const id_div_canvas = \"_\" + Math.random();\n        const id_canvas = \"_\" + Math.random();\n\n        /*\n    watch(isDragActive, (newValue, oldValue) => {\n        console.log(newValue);\n    });\n  */\n\n        onMounted(() => {\n            if ($u.isNotNull(props.url)) {\n                isDownloading.value = true;\n                isEmpty.value = false;\n                var img = new Image();\n                img.src = props.url; //e.target.files[0]);\n                img.onload = function () {\n                    isDownloading.value = false;\n                    console.log(img.width);\n                    showImg(img, img.width, img.height);\n                };\n            }\n        });\n\n        function showImg(img, w, h) {\n            var canvas = document.getElementById(id_canvas);\n\n            canvas.width = 400;\n            canvas.height = 400;\n            canvas.style.width = \"400px\";\n            canvas.style.height = \"400px\";\n\n            var dc = document.getElementById(id_div_canvas);\n            var wrh = w / h; //resp.data.width  / resp.data.height;\n            var newWidth = dc.offsetWidth;\n            var newHeight = newWidth / wrh;\n\n            if (newHeight > dc.offsetHeight) {\n                newHeight = dc.offsetHeight;\n                newWidth = newHeight * wrh;\n            }\n            var xOffset =\n                newWidth < dc.offsetWidth ? (dc.offsetWidth - newWidth) / 2 : 0;\n            var yOffset =\n                newHeight < dc.offsetHeight\n                    ? (dc.offsetHeight - newHeight) / 2\n                    : 0;\n            canvas\n                .getContext(\"2d\")\n                .drawImage(img, xOffset, yOffset, newWidth, newHeight);\n        }\n\n        // window.addEventListener(\"resize\", function () {\n        //     if ($u.isNotNull(props.url)) {\n        //         var img = new Image();\n        //         img.src = props.url; //e.target.files[0]);\n        //         img.onload = function () {\n        //             showImg(img, img.width, img.height);\n        //         };\n        //     }\n        // });\n\n        function onDrop(acceptFiles, rejectReasons) {\n            console.log(acceptFiles[0]);\n\n            var formData = new FormData();\n            formData.append(\"file\", acceptFiles[0]);\n            formData.append(\"type_ch\", new Blob([props.type_ch]));\n            formData.append(\"product_id\", new Blob([props.product_id]));\n            formData.append(\n                \"name\",\n                new Blob([\"nombre imagen si se requiere...\"])\n            );\n            formData.append(\n                \"description\",\n                new Blob([\"descripcion imagen si se requiere...\"])\n            );\n\n            state.value = \"UPLOADING\";\n            isUploading.value = true;\n\n            var token =\n                \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIzIiwiaWF0IjoxNjc1MzEyMDQxLjk2MzczMjUsInNob3djYXNlX2lkIjoxLCJwcm9maWxlX2NoIjoiRU5UUkVQUkVORVVSIn0.f_0NmBsrp8Wlq_lgeQRjZ6-n7saQqJiSpRWHpW7srVs\";\n            axios\n                .post(\"/api/showcase_upload\", formData, {\n                    headers: {\n                        \"Content-Type\": \"multipart/form-data\",\n                        Authorization: \"Bearer \" + token, //$store.session.token,\n                    },\n                })\n                .then((resp) => {\n                    console.log(resp.data);\n\n                    //local_uuid.value =   resp.data.uuid;\n                    context.emit(\"update:uuid\", resp.data.uuid);\n\n                    url_img.value = resp.data.url;\n                    isEmpty.value = false;\n\n                    //var ctx = document.getElementById(\"id_canvas\").getContext('2d');\n                    var img = new Image();\n                    img.src = URL.createObjectURL(acceptFiles[0]); //e.target.files[0]);\n                    img.onload = function () {\n                        state.value = \"NOT_EMPTY\";\n\n                        var ff = () => {\n                            try {\n                                showImg(img, resp.data.width, resp.data.height);\n\n                                isUploading.value = false;\n                            } catch (e) {\n                                console.log(e);\n\n                                setTimeout(ff, 500);\n                            }\n                        };\n\n                        setTimeout(ff, 0);\n                    };\n                })\n                .catch((error) => {\n                    isUploading.value = false;\n                    console.log(error.response);\n                });\n        }\n\n        const { getRootProps, getInputProps, isDragActive, ...rest } =\n            useDropzone({ onDrop });\n\n        console.log(rest);\n\n        watch(isDragActive, (newValue, oldValue) => {\n            if (newValue) {\n                state.value = \"DRAG_ACTIVE\";\n            } else {\n                console.log(url_img.value);\n                if ($u.isNull(url_img.value)) {\n                    state.value = \"EMPTY\";\n                } else {\n                    state.value = \"NOT_EMPTY\";\n                }\n            }\n        });\n\n        watch(url_img, (newValue, oldValue) => {\n            console.log(\"url_img: \" + newValue);\n        });\n        watch(isUploading, (newValue, oldValue) => {\n            console.log(\"isUploading: \" + newValue);\n        });\n\n        return {\n            getRootProps,\n            getInputProps,\n            isDragActive,\n            ...rest,\n            id_div_canvas,\n            id_canvas,\n            state,\n            url_img,\n            isEmpty,\n            isUploading,\n        };\n    },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}