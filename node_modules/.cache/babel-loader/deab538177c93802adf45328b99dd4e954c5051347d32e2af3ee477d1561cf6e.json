{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import ArgonInput from \"@/components/ArgonInput.vue\";\nimport RDxInput from \"@/components/RDxInput.vue\";\nimport axios from \"axios\";\nconst body = document.getElementsByTagName(\"body\")[0];\nexport default {\n  name: \"signin\",\n  data() {\n    return {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      error: false,\n      error_message: \"\",\n      error_code: \"\"\n    };\n  },\n  components: {\n    \"rdx-input\": RDxInput\n  },\n  created() {\n    body.classList.remove(\"bg-gray-100\");\n  },\n  beforeUnmount() {\n    body.classList.add(\"bg-gray-100\");\n  },\n  mounted() {},\n  methods: {\n    on_click_back_login() {\n      this.$router.push({\n        path: \"/session/login\"\n      });\n    },\n    on_click_register() {\n      /*  \n      if (this.name == \"\") {\n      this.error = true;\n      this.error_message = \"El campo nombre es requerido\";\n      return;\n      }\n      if (this.email == \"\") {\n      this.error = true;\n      this.error_message = \"El campo email es requerido\";\n      return;\n      }\n      if (this.password == \"\") {\n      this.error = true;\n      this.error_message = \"El campo contraseña es requerido\";\n      return;\n      }\n      */\n\n      this.error = false;\n      this.$store.session.clear_all();\n      this.$api.post({\n        url: \"/api/enrollment/\",\n        data: {\n          name: this.name,\n          email: this.email,\n          password: this.password\n        },\n        success: resp => {\n          this.$store.session.webcode = resp.data.webcode;\n          this.$store.session.current_user.name = this.name.trim();\n          this.$store.session.current_user.email = this.email.trim();\n          this.$router.push({\n            path: \"/session/verification\"\n          });\n        },\n        error: err => {\n          try {\n            if (err.response.data.code == \"ENROLLMENT_EMAIL_ALREADY_EXIST\") {\n              this.error_message = \"El email ya está enrolado\";\n            }\n          } catch (e) {\n            this.error_message = \"No se pudo realizar el registro\";\n          }\n          this.error = true;\n        }\n      });\n\n      /*       \n        \"/api/enrollment/\", {\n      name: this.name,\n      email: this.email,\n      password: this.password,\n      })\n      .then((response) => {\n      console.log(response);\n              })\n      .catch((error) => {\n      this.error = true;\n      console.log(error);\n                if (error?.response?.data?.code=='ENROLLMENT_EMAIL_ALREADY_EXIST') {\n        this.error_code = 'ENROLLMENT_EMAIL_ALREADY_EXIST';\n      }\n               this.error_message = error.response.data.error;\n      console.log(error.response.data.error);\n      });\n      */\n    }\n  }\n};","map":{"version":3,"mappings":";AAwEA;AACA,OAAOA,QAAO,MAAO,2BAA2B;AAChD,OAAOC,KAAI,MAAO,OAAO;AACzB,MAAMC,IAAG,GAAIC,QAAQ,CAACC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAErD,eAAe;EACXC,IAAI,EAAE,QAAQ;EACdC,IAAI,GAAG;IACH,OAAO;MACHD,IAAI,EAAE,EAAE;MACRE,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,KAAK;MACZC,aAAa,EAAE,EAAE;MACjBC,UAAU,EAAE;IAChB,CAAC;EACL,CAAC;EACDC,UAAU,EAAE;IACR,WAAW,EAAEZ;EACjB,CAAC;EACDa,OAAO,GAAG;IACNX,IAAI,CAACY,SAAS,CAACC,MAAM,CAAC,aAAa,CAAC;EACxC,CAAC;EAEDC,aAAa,GAAG;IACZd,IAAI,CAACY,SAAS,CAACG,GAAG,CAAC,aAAa,CAAC;EACrC,CAAC;EACDC,OAAO,GAAG,CAAC,CAAC;EACZC,OAAO,EAAE;IACLC,mBAAmB,GAAG;MAClB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAiB,CAAC,CAAC;IACjD,CAAC;IAEDC,iBAAiB,GAAG;MAChB;;;;;;;;;;;;;;;;;;MAkBA,IAAI,CAACf,KAAI,GAAI,KAAK;MAElB,IAAI,CAACgB,MAAM,CAACC,OAAO,CAACC,SAAS,EAAE;MAE/B,IAAI,CAACC,IAAI,CAACC,IAAI,CAAC;QACXC,GAAG,EAAE,kBAAkB;QACvBxB,IAAI,EAAE;UACFD,IAAI,EAAE,IAAI,CAACA,IAAI;UACfE,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACnB,CAAC;QACDuB,OAAO,EAAGC,IAAI,IAAK;UACf,IAAI,CAACP,MAAM,CAACC,OAAO,CAACO,OAAM,GAAID,IAAI,CAAC1B,IAAI,CAAC2B,OAAO;UAC/C,IAAI,CAACR,MAAM,CAACC,OAAO,CAACQ,YAAY,CAAC7B,IAAG,GAAI,IAAI,CAACA,IAAI,CAAC8B,IAAI,EAAE;UACxD,IAAI,CAACV,MAAM,CAACC,OAAO,CAACQ,YAAY,CAAC3B,KAAI,GAAI,IAAI,CAACA,KAAK,CAAC4B,IAAI,EAAE;UAC1D,IAAI,CAACd,OAAO,CAACC,IAAI,CAAC;YAAEC,IAAI,EAAE;UAAwB,CAAC,CAAC;QACxD,CAAC;QACDd,KAAK,EAAG2B,GAAG,IAAK;UACZ,IAAI;YACA,IACIA,GAAG,CAACC,QAAQ,CAAC/B,IAAI,CAACgC,IAAG,IACrB,gCAA+B,EACjC;cACE,IAAI,CAAC5B,aAAY,GAAI,2BAA2B;YACpD;UACJ,EAAE,OAAO6B,CAAC,EAAE;YACR,IAAI,CAAC7B,aAAY,GAAI,iCAAiC;UAC1D;UACA,IAAI,CAACD,KAAI,GAAI,IAAI;QACrB;MACJ,CAAC,CAAC;;MAEF;;;;;;;;;;;;;;;;;;;IAwBJ;EACJ;AACJ,CAAC","names":["RDxInput","axios","body","document","getElementsByTagName","name","data","email","password","error","error_message","error_code","components","created","classList","remove","beforeUnmount","add","mounted","methods","on_click_back_login","$router","push","path","on_click_register","$store","session","clear_all","$api","post","url","success","resp","webcode","current_user","trim","err","response","code","e"],"sourceRoot":"","sources":["/opt/rdx-vitrina-front/src/views/session/Register.vue"],"sourcesContent":["<template>\n    <div class=\"card card-plain\">\n        <div class=\"pb-0 card-header text-start\">\n            <h4 class=\"font-weight-bolder\">Registro de Usuario</h4>\n            <p class=\"mb-0\">Ingresa tus datos para continuar</p>\n        </div>\n        <div class=\"card-body\">\n            <form role=\"form\">\n                <rdx-input\n                    v-model=\"name\"\n                    id=\"floatingInput\"\n                    label=\"Nombre\"\n                    type=\"text\"\n                    placeholder=\"name\"\n                    :isRequired=\"true\"\n                />\n                <rdx-input\n                    v-model=\"email\"\n                    id=\"floatingInput\"\n                    label=\"Email\"\n                    type=\"email\"\n                    placeholder=\"email\"\n                    :isRequired=\"true\"\n                />\n                <rdx-input\n                    v-model=\"password\"\n                    id=\"floatingPassword\"\n                    label=\"Contraseña\"\n                    type=\"password\"\n                    placeholder=\"password\"\n                    :isRequired=\"true\"\n                />\n\n                <div class=\"alert alert-danger\" role=\"alert\" v-if=\"error\">\n                    {{ error_message }}\n                </div>\n\n                <rdx-button @click=\"on_click_register()\"\n                    >Registrarse</rdx-button\n                >\n            </form>\n        </div>\n        <!-- <div class=\"card-body\" style=\"background-color:black;right:0\">\n                  \n                </div> -->\n\n        <div class=\"px-1 pt-0 text-center card-footer px-lg-2\">\n            <p class=\"mx-auto mb-4 text-sm\">\n                Volver a\n                <a\n                    role=\"button\"\n                    @click=\"on_click_back_login()\"\n                    class=\"text-primary font-weight-bold\"\n                    >Iniciar Sesión</a\n                >\n            </p>\n        </div>\n    </div>\n</template>\n\n<!-- import style -->\n<style lang=\"scss\" scoped>\n.verification-code {\n    &-input {\n    }\n    display: flex;\n    justify-content: space-between;\n    margin: 0 auto;\n    width: 200px;\n}\n</style>\n<script>\n// import ArgonInput from \"@/components/ArgonInput.vue\";\nimport RDxInput from \"@/components/RDxInput.vue\";\nimport axios from \"axios\";\nconst body = document.getElementsByTagName(\"body\")[0];\n\nexport default {\n    name: \"signin\",\n    data() {\n        return {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            error: false,\n            error_message: \"\",\n            error_code: \"\",\n        };\n    },\n    components: {\n        \"rdx-input\": RDxInput,\n    },\n    created() {\n        body.classList.remove(\"bg-gray-100\");\n    },\n\n    beforeUnmount() {\n        body.classList.add(\"bg-gray-100\");\n    },\n    mounted() {},\n    methods: {\n        on_click_back_login() {\n            this.$router.push({ path: \"/session/login\" });\n        },\n\n        on_click_register() {\n            /*  \n      if (this.name == \"\") {\n        this.error = true;\n        this.error_message = \"El campo nombre es requerido\";\n        return;\n      }\n      if (this.email == \"\") {\n        this.error = true;\n        this.error_message = \"El campo email es requerido\";\n        return;\n      }\n      if (this.password == \"\") {\n        this.error = true;\n        this.error_message = \"El campo contraseña es requerido\";\n        return;\n      }\n      */\n\n            this.error = false;\n\n            this.$store.session.clear_all();\n\n            this.$api.post({\n                url: \"/api/enrollment/\",\n                data: {\n                    name: this.name,\n                    email: this.email,\n                    password: this.password,\n                },\n                success: (resp) => {\n                    this.$store.session.webcode = resp.data.webcode;\n                    this.$store.session.current_user.name = this.name.trim();\n                    this.$store.session.current_user.email = this.email.trim();\n                    this.$router.push({ path: \"/session/verification\" });\n                },\n                error: (err) => {\n                    try {\n                        if (\n                            err.response.data.code ==\n                            \"ENROLLMENT_EMAIL_ALREADY_EXIST\"\n                        ) {\n                            this.error_message = \"El email ya está enrolado\";\n                        }\n                    } catch (e) {\n                        this.error_message = \"No se pudo realizar el registro\";\n                    }\n                    this.error = true;\n                },\n            });\n\n            /*       \n              \"/api/enrollment/\", {\n          name: this.name,\n          email: this.email,\n          password: this.password,\n        })\n        .then((response) => {\n          console.log(response);\n\n          \n        })\n        .catch((error) => {\n          this.error = true;\n          console.log(error);\n          \n\n          if (error?.response?.data?.code=='ENROLLMENT_EMAIL_ALREADY_EXIST') {\n              this.error_code = 'ENROLLMENT_EMAIL_ALREADY_EXIST';\n          }\n          \n          this.error_message = error.response.data.error;\n          console.log(error.response.data.error);\n        });\n        */\n        },\n    },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}