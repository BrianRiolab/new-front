{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst body = document.getElementsByTagName(\"body\")[0];\nimport axios from \"axios\";\nexport default {\n  props: {\n    interests_ids: {\n      default: []\n    }\n  },\n  data() {\n    return {\n      interests: [],\n      local_interests_ids: {}\n    };\n  },\n  components: {},\n  beforeCreate() {\n    this.$api.get({\n      url: [[\"/api/showcase_interest\", null]],\n      success: resp_interest => {\n        this.interests = resp_interest.data.results;\n        this.interests.forEach((v, idx) => {\n          if (this.interests_ids.includes(v.id)) {\n            this.local_interests_ids[v.id] = true;\n          }\n        });\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  },\n  created() {\n    body.classList.remove(\"bg-gray-100\");\n  },\n  beforeUnmount() {\n    body.classList.add(\"bg-gray-100\");\n  },\n  mounted() {},\n  methods: {},\n  watch: {\n    local_interests_ids: {\n      handler(newValue, oldValue) {\n        console.log(this.local_interests_ids);\n        let interests_ids = [];\n        for (const [k, v] of Object.entries(newValue)) {\n          if (v == true) {\n            interests_ids.push(parseInt(k));\n          }\n        }\n        this.$emit(\"update:interests_ids\", interests_ids);\n      },\n      deep: true\n    }\n  }\n};","map":{"version":3,"mappings":";AAWA,MAAMA,IAAG,GAAIC,QAAQ,CAACC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAErD,OAAOC,KAAI,MAAO,OAAO;AACzB,eAAe;EACXC,KAAK,EAAE;IACHC,aAAa,EAAE;MAAEC,OAAO,EAAE;IAAG;EACjC,CAAC;EACDC,IAAI,GAAG;IACH,OAAO;MACHC,SAAS,EAAE,EAAE;MACbC,mBAAmB,EAAE,CAAC;IAC1B,CAAC;EACL,CAAC;EAEDC,UAAU,EAAE,CAAC,CAAC;EAEdC,YAAY,GAAG;IACX,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC;MACVC,GAAG,EAAE,CAAC,CAAC,wBAAwB,EAAE,IAAI,CAAC,CAAC;MACvCC,OAAO,EAAGC,aAAa,IAAK;QACxB,IAAI,CAACR,SAAQ,GAAIQ,aAAa,CAACT,IAAI,CAACU,OAAO;QAC3C,IAAI,CAACT,SAAS,CAACU,OAAO,CAAC,CAACC,CAAC,EAAEC,GAAG,KAAK;UAC/B,IAAI,IAAI,CAACf,aAAa,CAACgB,QAAQ,CAACF,CAAC,CAACG,EAAE,CAAC,EAAE;YACnC,IAAI,CAACb,mBAAmB,CAACU,CAAC,CAACG,EAAE,IAAI,IAAI;UACzC;QACJ,CAAC,CAAC;MACN,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAK;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACpB;IACJ,CAAC,CAAC;EACN,CAAC;EAEDG,OAAO,GAAG;IACN3B,IAAI,CAAC4B,SAAS,CAACC,MAAM,CAAC,aAAa,CAAC;EACxC,CAAC;EACDC,aAAa,GAAG;IACZ9B,IAAI,CAAC4B,SAAS,CAACG,GAAG,CAAC,aAAa,CAAC;EACrC,CAAC;EACDC,OAAO,GAAG,CAAC,CAAC;EACZC,OAAO,EAAE,CAAC,CAAC;EAEXC,KAAK,EAAE;IACHzB,mBAAmB,EAAE;MACjB0B,OAAO,CAACC,QAAQ,EAAEC,QAAQ,EAAE;QACxBZ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,mBAAmB,CAAC;QACrC,IAAIJ,aAAY,GAAI,EAAE;QACtB,KAAK,MAAM,CAACiC,CAAC,EAAEnB,CAAC,KAAKoB,MAAM,CAACC,OAAO,CAACJ,QAAQ,CAAC,EAAE;UAC3C,IAAIjB,KAAK,IAAI,EAAE;YACXd,aAAa,CAACoC,IAAI,CAACC,QAAQ,CAACJ,CAAC,CAAC,CAAC;UACnC;QACJ;QACA,IAAI,CAACK,KAAK,CAAC,sBAAsB,EAAEtC,aAAa,CAAC;MACrD,CAAC;MACDuC,IAAI,EAAE;IACV;EACJ;AACJ,CAAC","names":["body","document","getElementsByTagName","axios","props","interests_ids","default","data","interests","local_interests_ids","components","beforeCreate","$api","get","url","success","resp_interest","results","forEach","v","idx","includes","id","error","err","console","log","created","classList","remove","beforeUnmount","add","mounted","methods","watch","handler","newValue","oldValue","k","Object","entries","push","parseInt","$emit","deep"],"sourceRoot":"","sources":["/opt/rdx-vitrina-front/src/views/dashboard/vitrina/form/Interests.vue"],"sourcesContent":["<template>\n    <ul class=\"tg-list list-group font-apercu-bold col-8 mx-auto ps-4\">\n        <template v-for=\"(interest, idx) in interests\" :key=\"idx\">\n            <rdx-checkbox\n                :text=\"interest.name\"\n                v-model:value=\"local_interests_ids[interest.id]\"\n            />\n        </template>\n    </ul>\n</template>\n<script>\nconst body = document.getElementsByTagName(\"body\")[0];\n\nimport axios from \"axios\";\nexport default {\n    props: {\n        interests_ids: { default: [] },\n    },\n    data() {\n        return {\n            interests: [],\n            local_interests_ids: {},\n        };\n    },\n\n    components: {},\n\n    beforeCreate() {\n        this.$api.get({\n            url: [[\"/api/showcase_interest\", null]],\n            success: (resp_interest) => {\n                this.interests = resp_interest.data.results;\n                this.interests.forEach((v, idx) => {\n                    if (this.interests_ids.includes(v.id)) {\n                        this.local_interests_ids[v.id] = true;\n                    }\n                });\n            },\n            error: (err) => {\n                console.log(err);\n            },\n        });\n    },\n\n    created() {\n        body.classList.remove(\"bg-gray-100\");\n    },\n    beforeUnmount() {\n        body.classList.add(\"bg-gray-100\");\n    },\n    mounted() {},\n    methods: {},\n\n    watch: {\n        local_interests_ids: {\n            handler(newValue, oldValue) {\n                console.log(this.local_interests_ids);\n                let interests_ids = [];\n                for (const [k, v] of Object.entries(newValue)) {\n                    if (v == true) {\n                        interests_ids.push(parseInt(k));\n                    }\n                }\n                this.$emit(\"update:interests_ids\", interests_ids);\n            },\n            deep: true,\n        },\n    },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}