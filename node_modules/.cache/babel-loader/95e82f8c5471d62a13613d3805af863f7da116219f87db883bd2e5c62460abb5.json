{"ast":null,"code":"export default {\n  name: \"rdx-checkbox\",\n  props: {\n    text: {\n      type: String,\n      required: true\n    },\n    value: {\n      default: null\n    }\n  },\n  data() {\n    return {\n      modelValue: this.value\n    };\n  },\n  watch: {\n    modelValue: {\n      handler(newValue, oldValue) {\n        this.$emit(\"update:value\", newValue);\n      },\n      deep: true\n    }\n  }\n};","map":{"version":3,"mappings":"AAmBA,eAAe;EACXA,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE;IACHC,IAAI,EAAE;MACFC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACd,CAAC;IACDC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAK;EAC3B,CAAC;EACDC,IAAI,GAAG;IACH,OAAO;MACHC,UAAU,EAAE,IAAI,CAACH;IACrB,CAAC;EACL,CAAC;EAEDI,KAAK,EAAE;IACHD,UAAU,EAAE;MACRE,OAAO,CAACC,QAAQ,EAAEC,QAAQ,EAAE;QACxB,IAAI,CAACC,KAAK,CAAC,cAAc,EAAEF,QAAQ,CAAC;MACxC,CAAC;MACDG,IAAI,EAAE;IACV;EACJ;AACJ,CAAC","names":["name","props","text","type","String","required","value","default","data","modelValue","watch","handler","newValue","oldValue","$emit","deep"],"sourceRoot":"","sources":["/opt/rdx-vitrina-front/src/components/RDxCheckbox.vue"],"sourcesContent":["<template>\n    <li class=\"tg-list list-group-item\">\n        <div class=\"col-8\">\n            <span>{{ text }}</span>\n        </div>\n        <div class=\"col-4 center justify-content-end\">\n            <input class=\"tgl tgl-light\" type=\"checkbox\" v-model=\"modelValue\" />\n            <label class=\"tgl-btn\" v-bind:for=\"id\"></label>\n        </div>\n        <!-- \n      -->\n        <!-- <div class=\"form-check form-switch\">\n        <input class=\"form-check-input\" type=\"checkbox\" v-model=\"modelValue\" >\n        <label class=\"form-check-label\">{{text}}</label>\n      </div> -->\n    </li>\n</template>\n\n<script>\nexport default {\n    name: \"rdx-checkbox\",\n    props: {\n        text: {\n            type: String,\n            required: true,\n        },\n        value: { default: null },\n    },\n    data() {\n        return {\n            modelValue: this.value,\n        };\n    },\n\n    watch: {\n        modelValue: {\n            handler(newValue, oldValue) {\n                this.$emit(\"update:value\", newValue);\n            },\n            deep: true,\n        },\n    },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}