{"ast":null,"code":"import { useDropzone } from \"vue3-dropzone\";\nimport { getCurrentInstance, ref, watch, onMounted } from \"vue\";\nimport axios from \"axios\";\nexport default {\n  props: {\n    url: {\n      default: null\n    },\n    uuid: {\n      default: null\n    },\n    type_ch: {\n      default: null\n    },\n    product_id: {\n      default: null\n    }\n  },\n  emits: [\"update:uuid\"],\n  setup(props, context) {\n    const instance = getCurrentInstance();\n    const {\n      $api,\n      $store,\n      $u\n    } = instance.appContext.config.globalProperties;\n    const state = ref(\"EMPTY\");\n    const isUploading = ref(false);\n    const isDownloading = ref(false);\n    const isEmpty = ref(true);\n\n    //const local_uuid = ref(props.uuid);\n    const url_img = ref(props.url);\n    const id_div_canvas = \"_\" + Math.random();\n    const id_canvas = \"_\" + Math.random();\n\n    /*\n    watch(isDragActive, (newValue, oldValue) => {\n    console.log(newValue);\n    });\n    */\n\n    onMounted(() => {\n      if ($u.isNotNull(props.url)) {\n        isDownloading.value = true;\n        isEmpty.value = false;\n        var img = new Image();\n        img.src = props.url; //e.target.files[0]);\n        img.onload = function () {\n          isDownloading.value = false;\n          console.log(img.width);\n          showImg(img, img.width, img.height);\n        };\n      }\n    });\n    function showImg(img, w, h) {\n      var canvas = document.getElementById(id_canvas);\n      canvas.width = 400;\n      canvas.height = 400;\n      canvas.style.width = \"400px\";\n      canvas.style.height = \"400px\";\n      var dc = document.getElementById(id_div_canvas);\n      var wrh = w / h; //resp.data.width  / resp.data.height;\n      var newWidth = dc.offsetWidth;\n      var newHeight = newWidth / wrh;\n      if (newHeight > dc.offsetHeight) {\n        newHeight = dc.offsetHeight;\n        newWidth = newHeight * wrh;\n      }\n      var xOffset = newWidth < dc.offsetWidth ? (dc.offsetWidth - newWidth) / 2 : 0;\n      var yOffset = newHeight < dc.offsetHeight ? (dc.offsetHeight - newHeight) / 2 : 0;\n      canvas.getContext(\"2d\").drawImage(img, xOffset, yOffset, newWidth, newHeight);\n    }\n    window.addEventListener(\"resize\", function () {\n      if ($u.isNotNull(props.url)) {\n        var img = new Image();\n        img.src = props.url; //e.target.files[0]);\n        img.onload = function () {\n          showImg(img, img.width, img.height);\n        };\n      }\n    });\n    function onDrop(acceptFiles, rejectReasons) {\n      console.log(acceptFiles[0]);\n      var formData = new FormData();\n      formData.append(\"file\", acceptFiles[0]);\n      formData.append(\"type_ch\", new Blob([props.type_ch]));\n      formData.append(\"product_id\", new Blob([props.product_id]));\n      formData.append(\"name\", new Blob([\"nombre imagen si se requiere...\"]));\n      formData.append(\"description\", new Blob([\"descripcion imagen si se requiere...\"]));\n      state.value = \"UPLOADING\";\n      isUploading.value = true;\n      var token = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIzIiwiaWF0IjoxNjc1MzEyMDQxLjk2MzczMjUsInNob3djYXNlX2lkIjoxLCJwcm9maWxlX2NoIjoiRU5UUkVQUkVORVVSIn0.f_0NmBsrp8Wlq_lgeQRjZ6-n7saQqJiSpRWHpW7srVs\";\n      axios.post(\"/api/showcase_upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: \"Bearer \" + token //$store.session.token,\n        }\n      }).then(resp => {\n        console.log(resp.data);\n\n        //local_uuid.value =   resp.data.uuid;\n        context.emit(\"update:uuid\", resp.data.uuid);\n        url_img.value = resp.data.url;\n        isEmpty.value = false;\n\n        //var ctx = document.getElementById(\"id_canvas\").getContext('2d');\n        var img = new Image();\n        img.src = URL.createObjectURL(acceptFiles[0]); //e.target.files[0]);\n        img.onload = function () {\n          state.value = \"NOT_EMPTY\";\n          var ff = () => {\n            try {\n              showImg(img, resp.data.width, resp.data.height);\n              isUploading.value = false;\n            } catch (e) {\n              console.log(e);\n              setTimeout(ff, 500);\n            }\n          };\n          setTimeout(ff, 0);\n        };\n      }).catch(error => {\n        isUploading.value = false;\n        console.log(error.response);\n      });\n    }\n    const {\n      getRootProps,\n      getInputProps,\n      isDragActive,\n      ...rest\n    } = useDropzone({\n      onDrop\n    });\n    console.log(rest);\n    watch(isDragActive, (newValue, oldValue) => {\n      if (newValue) {\n        state.value = \"DRAG_ACTIVE\";\n      } else {\n        console.log(url_img.value);\n        if ($u.isNull(url_img.value)) {\n          state.value = \"EMPTY\";\n        } else {\n          state.value = \"NOT_EMPTY\";\n        }\n      }\n    });\n    watch(url_img, (newValue, oldValue) => {\n      console.log(\"url_img: \" + newValue);\n    });\n    watch(isUploading, (newValue, oldValue) => {\n      console.log(\"isUploading: \" + newValue);\n    });\n    return {\n      getRootProps,\n      getInputProps,\n      isDragActive,\n      ...rest,\n      id_div_canvas,\n      id_canvas,\n      state,\n      url_img,\n      isEmpty,\n      isUploading\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["useDropzone","getCurrentInstance","ref","watch","onMounted","axios","props","url","default","uuid","type_ch","product_id","emits","setup","context","instance","$api","$store","$u","appContext","config","globalProperties","state","isUploading","isDownloading","isEmpty","url_img","id_div_canvas","Math","random","id_canvas","isNotNull","value","img","Image","src","onload","console","log","width","showImg","height","w","h","canvas","document","getElementById","style","dc","wrh","newWidth","offsetWidth","newHeight","offsetHeight","xOffset","yOffset","getContext","drawImage","window","addEventListener","onDrop","acceptFiles","rejectReasons","formData","FormData","append","Blob","token","post","headers","Authorization","then","resp","data","emit","URL","createObjectURL","ff","e","setTimeout","catch","error","response","getRootProps","getInputProps","isDragActive","rest","newValue","oldValue","isNull"],"sourceRoot":"","sources":["/opt/rdx-vitrina-front/src/views/dashboard/vitrina/form/inputs/VitrinaImage.vue"],"sourcesContent":["<template>\n    <div class=\"dropzone-cover dropzone-type-roundrect\" v-bind=\"getRootProps()\">\n        <div class=\"dropzone-card image\">\n            <div\n                class=\"dropzone dz-started\"\n                data-controller=\"dropzone\"\n                data-dropzone-max-file-size=\"255\"\n                data-dropzone-max-files=\"1\"\n                data-dropzone-target=\"root\"\n            >\n                <input\n                    v-bind=\"getInputProps()\"\n                    class=\"d-none\"\n                    required\n                    accept=\"image/png,image/jpeg\"\n                    direct_upload=\"true\"\n                    data-dropzone-target=\"input\"\n                />\n\n                <!-- SIN IMAGEN CARGADA -->\n                <div v-if=\"isEmpty\" class=\"dropzone-empty center\">\n                    <!-- cross -->\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 40 40\"\n                        preserveAspectRatio=\"none\"\n                        class=\"w-100 h-100\"\n                    >\n                        <path class=\"line-svg\" d=\"M 20,20 L 39,39\"></path>\n                        <path class=\"line-svg\" d=\"M 20,20 L 1,39\"></path>\n                        <path class=\"line-svg\" d=\"M 20,20 L 39,1\"></path>\n                        <path class=\"line-svg\" d=\"M 20,20 L 1,1\"></path>\n                    </svg>\n                </div>\n\n                <!-- ESTOY EJECUTANDO DRAG -->\n                <div v-if=\"isDragActive\" class=\"dropzone-drag\">\n                    <div class=\"dropzone-drag-content\">Suelta tu imagen..</div>\n                </div>\n\n                <!-- SE ESTA HACIENDO EL UPLOAD O DOWNLOAD  -->\n                <div\n                    v-if=\"isUploading || isDownloading\"\n                    class=\"dropzone-uploading\"\n                >\n                    <div class=\"dropzone-uploading-content\">\n                        <div class=\"spinner-border\" role=\"status\">\n                            <span class=\"visually-hidden\">Loading...</span>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- TENGO UNA IMAGEN CARGADA -->\n                <div\n                    v-if=\"!isEmpty\"\n                    class=\"dz-preview dz-processing dz-success dz-complete\"\n                    data-dropzone-target=\"preview\"\n                >\n                    <div class=\"dz-image\" :id=\"id_div_canvas\">\n                        <canvas\n                            style=\"background: #fff; display: block\"\n                            :id=\"id_canvas\"\n                        />\n\n                        <!-- <%= image_tag cover_rect(image),  size: '600x600','data-dz-thumbnail': '' %> -->\n                    </div>\n\n                    <!--\n                    <div class=\"dz-details h-100 w-100\">\n                         <%= link_to image, download: image.blob.filename.to_s , target: :_blank, class: 'dz-download w-100 h-100' do %>\n          <%=content_tag :span, t('.download')%>\n        <%end%> \n                    </div>\n                    -->\n                    <!-- \n                    <a  \n                        v-if=\"!isUploading\"\n                        class=\"dz-remove\"\n                        href=\"javascript:undefined;\"\n                    >\n                    </a>\n                    -->\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.line-svg {\n    fill: none;\n    stroke: #c6c6c6;\n    stroke-width: 1px;\n    vector-effect: non-scaling-stroke;\n    shape-rendering: geometricPrecision;\n}\n.dropzone-card {\n    width: 100%;\n    height: 100%;\n    background: transparent\n        linear-gradient(rgba(255, 255, 255, 0.67), rgba(255, 255, 255, 0.2)) 0%\n        0% no-repeat padding-box;\n    box-shadow: 3px 7px 8px rgba(0, 0, 0, 0.168627451);\n    border-radius: 11px;\n    overflow: hidden;\n\n    .dropzone {\n        background-color: #f5f5f5 !important;\n        // aspect-ratio: 400/400;\n        width: 100%;\n        min-height: auto;\n        border: none;\n        position: relative;\n        opacity: 1;\n\n        .dropzone-empty {\n            background-color: white;\n            width: 100%;\n            height: 100%;\n            border: 1px dashed #6f6f6f;\n            border-radius: 11px;\n            margin: 0;\n            display: block !important;\n        }\n\n        .dropzone-uploading {\n            background-color: rgba(0, 0, 0, 0.2);\n            width: 100%;\n            height: 100%;\n            position: absolute;\n            top: 0px;\n            left: 0px;\n            .dropzone-uploading-content {\n                position: absolute;\n                z-index: 1031;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        }\n\n        .dropzone-drag {\n            background-color: rgba(0, 0, 0, 0.2);\n            width: 100%;\n            height: 100%;\n            position: absolute;\n            top: 0px;\n            left: 0px;\n            .dropzone-drag-content {\n                background: #ff0;\n                position: absolute;\n                z-index: 1031;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        }\n    }\n}\n</style>\n\n<script>\nimport { useDropzone } from \"vue3-dropzone\";\nimport { getCurrentInstance, ref, watch, onMounted } from \"vue\";\nimport axios from \"axios\";\n\nexport default {\n    props: {\n        url: { default: null },\n        uuid: { default: null },\n        type_ch: { default: null },\n        product_id: { default: null },\n    },\n    emits: [\"update:uuid\"],\n    setup(props, context) {\n        const instance = getCurrentInstance();\n        const { $api, $store, $u } =\n            instance.appContext.config.globalProperties;\n\n        const state = ref(\"EMPTY\");\n\n        const isUploading = ref(false);\n        const isDownloading = ref(false);\n        const isEmpty = ref(true);\n\n        //const local_uuid = ref(props.uuid);\n        const url_img = ref(props.url);\n\n        const id_div_canvas = \"_\" + Math.random();\n        const id_canvas = \"_\" + Math.random();\n\n        /*\n    watch(isDragActive, (newValue, oldValue) => {\n        console.log(newValue);\n    });\n  */\n\n        onMounted(() => {\n            if ($u.isNotNull(props.url)) {\n                isDownloading.value = true;\n                isEmpty.value = false;\n                var img = new Image();\n                img.src = props.url; //e.target.files[0]);\n                img.onload = function () {\n                    isDownloading.value = false;\n                    console.log(img.width);\n                    showImg(img, img.width, img.height);\n                };\n            }\n        });\n\n        function showImg(img, w, h) {\n            var canvas = document.getElementById(id_canvas);\n\n            canvas.width = 400;\n            canvas.height = 400;\n            canvas.style.width = \"400px\";\n            canvas.style.height = \"400px\";\n\n            var dc = document.getElementById(id_div_canvas);\n            var wrh = w / h; //resp.data.width  / resp.data.height;\n            var newWidth = dc.offsetWidth;\n            var newHeight = newWidth / wrh;\n\n            if (newHeight > dc.offsetHeight) {\n                newHeight = dc.offsetHeight;\n                newWidth = newHeight * wrh;\n            }\n            var xOffset =\n                newWidth < dc.offsetWidth ? (dc.offsetWidth - newWidth) / 2 : 0;\n            var yOffset =\n                newHeight < dc.offsetHeight\n                    ? (dc.offsetHeight - newHeight) / 2\n                    : 0;\n            canvas\n                .getContext(\"2d\")\n                .drawImage(img, xOffset, yOffset, newWidth, newHeight);\n        }\n\n        window.addEventListener(\"resize\", function () {\n            if ($u.isNotNull(props.url)) {\n                var img = new Image();\n                img.src = props.url; //e.target.files[0]);\n                img.onload = function () {\n                    showImg(img, img.width, img.height);\n                };\n            }\n        });\n\n        function onDrop(acceptFiles, rejectReasons) {\n            console.log(acceptFiles[0]);\n\n            var formData = new FormData();\n            formData.append(\"file\", acceptFiles[0]);\n            formData.append(\"type_ch\", new Blob([props.type_ch]));\n            formData.append(\"product_id\", new Blob([props.product_id]));\n            formData.append(\n                \"name\",\n                new Blob([\"nombre imagen si se requiere...\"])\n            );\n            formData.append(\n                \"description\",\n                new Blob([\"descripcion imagen si se requiere...\"])\n            );\n\n            state.value = \"UPLOADING\";\n            isUploading.value = true;\n\n            var token =\n                \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIzIiwiaWF0IjoxNjc1MzEyMDQxLjk2MzczMjUsInNob3djYXNlX2lkIjoxLCJwcm9maWxlX2NoIjoiRU5UUkVQUkVORVVSIn0.f_0NmBsrp8Wlq_lgeQRjZ6-n7saQqJiSpRWHpW7srVs\";\n            axios\n                .post(\"/api/showcase_upload\", formData, {\n                    headers: {\n                        \"Content-Type\": \"multipart/form-data\",\n                        Authorization: \"Bearer \" + token, //$store.session.token,\n                    },\n                })\n                .then((resp) => {\n                    console.log(resp.data);\n\n                    //local_uuid.value =   resp.data.uuid;\n                    context.emit(\"update:uuid\", resp.data.uuid);\n\n                    url_img.value = resp.data.url;\n                    isEmpty.value = false;\n\n                    //var ctx = document.getElementById(\"id_canvas\").getContext('2d');\n                    var img = new Image();\n                    img.src = URL.createObjectURL(acceptFiles[0]); //e.target.files[0]);\n                    img.onload = function () {\n                        state.value = \"NOT_EMPTY\";\n\n                        var ff = () => {\n                            try {\n                                showImg(img, resp.data.width, resp.data.height);\n\n                                isUploading.value = false;\n                            } catch (e) {\n                                console.log(e);\n\n                                setTimeout(ff, 500);\n                            }\n                        };\n\n                        setTimeout(ff, 0);\n                    };\n                })\n                .catch((error) => {\n                    isUploading.value = false;\n                    console.log(error.response);\n                });\n        }\n\n        const { getRootProps, getInputProps, isDragActive, ...rest } =\n            useDropzone({ onDrop });\n\n        console.log(rest);\n\n        watch(isDragActive, (newValue, oldValue) => {\n            if (newValue) {\n                state.value = \"DRAG_ACTIVE\";\n            } else {\n                console.log(url_img.value);\n                if ($u.isNull(url_img.value)) {\n                    state.value = \"EMPTY\";\n                } else {\n                    state.value = \"NOT_EMPTY\";\n                }\n            }\n        });\n\n        watch(url_img, (newValue, oldValue) => {\n            console.log(\"url_img: \" + newValue);\n        });\n        watch(isUploading, (newValue, oldValue) => {\n            console.log(\"isUploading: \" + newValue);\n        });\n\n        return {\n            getRootProps,\n            getInputProps,\n            isDragActive,\n            ...rest,\n            id_div_canvas,\n            id_canvas,\n            state,\n            url_img,\n            isEmpty,\n            isUploading,\n        };\n    },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}